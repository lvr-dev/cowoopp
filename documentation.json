{
    "pipes": [
        {
            "name": "DefaultValuePipe",
            "id": "pipe-DefaultValuePipe-2b1629ad9f20980744a8ff7c0d220802",
            "file": "src/app/shared/pipes/default-value.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        },
                        {
                            "name": "defaultValue",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultValue",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "defaultValue",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'defaultValue'\n})\nexport class DefaultValuePipe implements PipeTransform {\n\n  transform(value: unknown, defaultValue: unknown): unknown {\n    return value || defaultValue;\n  }\n\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Coworker",
            "id": "interface-Coworker-37b636c01332141e25d8ce568281e247",
            "file": "src/app/coworkers/coworker.ts",
            "type": "interface",
            "sourceCode": "export interface Coworker {\n    id: string;\n    firstName: string;\n    prefix?: string;\n    lastName: string;\n    avatar?: string;\n    email: string;\n    phone?: string;\n    status: boolean;\n    client?: string;\n    since?: string;\n    until?: string;\n    visible: boolean;\n}\n\nenum AssignmentStatus {\n    AVAILABLE,\n    ASSIGNMENT,\n    LOOKOUT,\n    LEAVING_FIRM\n}\n\n\n",
            "properties": [
                {
                    "name": "avatar",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "client",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lastName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "phone",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "prefix",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "since",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "status",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "until",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "visible",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AvatarService",
            "id": "injectable-AvatarService-f749936af56371228c03305844506837",
            "file": "src/app/core/services/avatar.service.ts",
            "properties": [
                {
                    "name": "avatarsAvailable",
                    "defaultValue": "[\n    'black-blood',\n    'cheburashka',\n    'finn',\n    'genie',\n    'gizmo',\n    'green-lantern-dc',\n    'harley-quinn-dc',\n    'hulk',\n    'ice-king',\n    'jake',\n    'jason-voorhees',\n    'kermit-the-frog',\n    'klingon-head',\n    'lumpy-space-princess',\n    'madagascar',\n    'ninja-turtle',\n    'oracle',\n    'r2-d2',\n    'rogue',\n    'scream',\n    'spongebob-squarepants',\n    'super-mario',\n    'undyne'\n  ]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "avatarsInUse",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAvatarString",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "getAvatarUrl",
                    "args": [
                        {
                            "name": "avatarString",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 64,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "avatarString",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRandomAvatar",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getRandomInt",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "getUnusedAvatar",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvatarService {\n\n  private avatarsInUse: string[] = [];\n  private avatarsAvailable: string[] = [\n    'black-blood',\n    'cheburashka',\n    'finn',\n    'genie',\n    'gizmo',\n    'green-lantern-dc',\n    'harley-quinn-dc',\n    'hulk',\n    'ice-king',\n    'jake',\n    'jason-voorhees',\n    'kermit-the-frog',\n    'klingon-head',\n    'lumpy-space-princess',\n    'madagascar',\n    'ninja-turtle',\n    'oracle',\n    'r2-d2',\n    'rogue',\n    'scream',\n    'spongebob-squarepants',\n    'super-mario',\n    'undyne'\n  ];\n\n  public getRandomAvatar() {\n    const avatarString = this.getAvatarString();\n    this.avatarsInUse.push(avatarString);\n    return this.getAvatarUrl(avatarString);\n  }\n\n  private getAvatarString() {\n    if (this.avatarsAvailable.length > this.avatarsInUse.length) {\n      return this.getUnusedAvatar();\n    } else {\n      const random = this.getRandomInt();\n      return this.avatarsAvailable[random];\n    }\n  }\n\n  private getRandomInt() {\n    const arrayLength = this.avatarsAvailable.length - 1;\n    return Math.floor(Math.random() * Math.floor(arrayLength));\n  }\n\n  private getUnusedAvatar(): string {\n    const random = this.getRandomInt();\n    const selectedAvatar = this.avatarsAvailable[random];\n    if (this.avatarsInUse.indexOf(selectedAvatar) > -1) {\n      return this.getUnusedAvatar();\n    }\n    return this.avatarsAvailable[random];\n  }\n\n  private getAvatarUrl(avatarString) {\n    return `./assets/avatars/icons8-${avatarString}-48.png`;\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "FacadeService",
            "id": "injectable-FacadeService-2ded6e1ae021684c73543338e7ba6b5c",
            "file": "src/app/core/services/facade.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCoWorker",
                    "args": [
                        {
                            "name": "coworkerId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Coworker>",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "coworkerId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCoWorkers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Coworker[]>",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { BehaviorSubject, Observable, Subscription} from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\n\n\nimport { Coworker } from '../../coworkers/coworker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacadeService {\n\n  constructor(private httpService: HttpService) { }\n\n  getCoWorkers(): Observable<Coworker[]> {\n    return this.httpService.getData<Coworker[]>('../assets/data/data.json');\n  }\n\n  getCoWorker(coworkerId: string): Observable<Coworker>  {\n    const coworkers$ = this.getCoWorkers();\n    return coworkers$.pipe(map(coworkers => {\n      return coworkers.find(co => co.id === coworkerId);\n     })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "httpService",
                        "type": "HttpService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpService",
                        "type": "HttpService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpService",
            "id": "injectable-HttpService-39f0c16ad622a4db13cddd90b7d6f41b",
            "file": "src/app/core/services/http.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getData",
                    "args": [
                        {
                            "name": "path",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  getData<T>(path: string): Observable<T> {\n    return this.http.get<T>(path);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-0fb49cd10dd7c20b56e1ec9223a089df",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getParagraphText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "EnsureImportedOnceModule",
            "id": "class-EnsureImportedOnceModule-67aa5c52b8e2cef8a57e7bc9fc36eb6f",
            "file": "src/app/core/ensure-imported-once.module.ts",
            "type": "class",
            "sourceCode": "export abstract class EnsureImportedOnceModule {\n    protected constructor(targetModule: any) {\n        if (targetModule) {\n            throw new Error(`${targetModule.constructor.name} has already been loaded.`);\n        }\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "targetModule",
                        "type": "any"
                    }
                ],
                "line": 2,
                "modifierKind": [
                    113
                ],
                "jsdoctags": [
                    {
                        "name": "targetModule",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8f102680f495071b15f5dc9c238a6233",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "initializeApp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "platform",
                        "type": "Platform"
                    },
                    {
                        "name": "splashScreen",
                        "type": "SplashScreen"
                    },
                    {
                        "name": "statusBar",
                        "type": "StatusBar"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "platform",
                        "type": "Platform",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "splashScreen",
                        "type": "SplashScreen",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "statusBar",
                        "type": "StatusBar",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CowooHeaderComponent",
            "id": "component-CowooHeaderComponent-54a10b77f24620628184e703da66f8ab",
            "file": "src/app/shared/components/cowoo-header/cowoo-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cowoo-header",
            "styleUrls": [
                "./cowoo-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cowoo-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cowoo-header',\n  templateUrl: './cowoo-header.component.html',\n  styleUrls: ['./cowoo-header.component.scss'],\n})\nexport class CowooHeaderComponent implements OnInit {\n  @Input() title: string;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./cowoo-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar color=\"secondary\" class=\"ion-padding-start\">\n    <ion-row>\n      <ion-img\n          src=\"../assets/images/cookie-monster.png\"\n          [routerLink]=\"['']\"\n          class=\"clickable\"\n      ></ion-img>\n    <ion-title class=\"header-title\">{{title | defaultValue: 'coworkers'}}</ion-title>\n    </ion-row>\n  </ion-toolbar>\n</ion-header>\n"
        },
        {
            "name": "CoworkerItemComponent",
            "id": "component-CoworkerItemComponent-11e245e9eb21dde1dc99c30b0fbcc1da",
            "file": "src/app/coworkers/coworker-item/coworker-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coworker-item",
            "styleUrls": [
                "./coworker-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coworker-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "coworker",
                    "line": 11,
                    "type": "Coworker"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatarImg",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Coworker } from '../coworker';\nimport { AvatarService } from '@services';\n\n@Component({\n  selector: 'app-coworker-item',\n  templateUrl: './coworker-item.component.html',\n  styleUrls: ['./coworker-item.component.scss'],\n})\nexport class CoworkerItemComponent implements OnInit {\n  @Input() coworker: Coworker;\n\n  avatarImg: string;\n\n  constructor(private avatarService: AvatarService) { }\n\n  ngOnInit() {\n    this.avatarImg = this.coworker.avatar ?\n        this.coworker.avatar :\n        this.avatarService.getRandomAvatar();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.coworker-name {\n  font-family: 'ArvoBold', 'sans-serif';\n  margin-left: 1em;\n  font-size: 1em;\n  font-weight: 700;\n  max-width: 66%;\n  height: 100%;\n  align-self: center;\n}\n\n.coworker-prefix {\n  margin: 0 1px;\n}\n\np {\n  margin: 0;\n  padding: 0;\n}\n\np.top {\n  margin-top: 1em;\n}\n\nion-row.tertiary {\n  background-color: var(--ion-color-secondary-tint);\n}\n\nion-row.padded {\n  padding: 4px;\n}\n\nspan.label {\n  font-size: 0.9em;\n  font-weight: 600;\n}\n",
                    "styleUrl": "./coworker-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "avatarService",
                        "type": "AvatarService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "avatarService",
                        "type": "AvatarService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item role=\"listitem\" lines=\"none\">\n  <ion-grid>\n    <ion-row class=\"tertiary padded clickable\" [routerLink]=\"['./',  coworker.id]\">\n      <ion-avatar><img [src]=\"avatarImg\"></ion-avatar>\n        <div class=\"coworker-name\">{{coworker.firstName}}\n          <span *ngIf=\"coworker.prefix\" class=\"coworker-prefix\">{{coworker.prefix}}\n                  </span>{{coworker.lastName}}\n        </div>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"12\" size-sm=\"6\">\n        <p class=\"top\">\n          <span class=\"label\">Client:</span>\n          {{coworker.client | defaultValue: 'no client'}}\n        </p>\n        <p>\n          <span class=\"label\">Status:</span>\n          {{coworker.status}}\n        </p>\n      </ion-col>\n      <ion-col *ngIf=\"coworker.client\" size=\"12\" size-sm=\"6\">\n        <p class=\"top\">\n          <span class=\"label\">Since:</span>\n          {{coworker.since}}\n        </p>\n        <p><span class=\"label\">Until:</span>\n          {{coworker.until | defaultValue: 'unknown'}}\n        </p>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-item>\n"
        },
        {
            "name": "CoworkersDetailPage",
            "id": "component-CoworkersDetailPage-8ef858b879626fb5a8a13cd819578f75",
            "file": "src/app/coworkers/coworkers-detail/coworkers-detail.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coworkers-detail",
            "styleUrls": [
                "./coworkers-detail.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coworkers-detail.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatarImg",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "coworker",
                    "type": "Coworker",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "fullName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "getAvatarUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "getFullName",
                    "args": [
                        {
                            "name": "coworker",
                            "type": "Coworker"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "coworker",
                            "type": "Coworker",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AvatarService, FacadeService } from '../../core/services';\nimport { Coworker } from '../coworker';\n\n@Component({\n  selector: 'app-coworkers-detail',\n  templateUrl: './coworkers-detail.page.html',\n  styleUrls: ['./coworkers-detail.page.scss'],\n})\nexport class CoworkersDetailPage implements OnInit {\n\n  coworker: Coworker;\n  fullName: string;\n  avatarImg: string;\n\n  constructor(\n      private activatedRoute: ActivatedRoute,\n      private router: Router,\n      private facadeService: FacadeService,\n      private avatarService: AvatarService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap  => {\n      if (!paramMap.has('coworkerId')) {\n        this.router.navigate(['/coworkers']);\n        return;\n      }\n      const coworkerId = paramMap.get('coworkerId');\n      this.facadeService.getCoWorker(coworkerId).subscribe(co => {\n        this.coworker = co;\n        this.fullName = this.getFullName(co);\n        this.getAvatarUrl();\n      });\n    });\n  }\n\n  getFullName(coworker: Coworker) {\n    if (coworker.prefix && coworker.firstName) {\n      return `${coworker.firstName} ${coworker.prefix} ${coworker.lastName}`;\n    }\n    if (coworker.prefix && !coworker.firstName) {\n      return `${coworker.prefix} ${coworker.lastName}`;\n    }\n    if (coworker.firstName && !coworker.prefix) {\n      return `${coworker.firstName} ${coworker.lastName}`;\n    }\n    return `${coworker.lastName}`;\n  }\n\n  getAvatarUrl() {\n    if (this.coworker) {\n      this.avatarImg = this.avatarService.getRandomAvatar();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".flex-row {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.flex-item-center {\n  margin-right: 2em;\n}\n",
                    "styleUrl": "./coworkers-detail.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "facadeService",
                        "type": "FacadeService"
                    },
                    {
                        "name": "avatarService",
                        "type": "AvatarService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "facadeService",
                        "type": "FacadeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "avatarService",
                        "type": "AvatarService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-cowoo-header [title]=\"'coworker'\"></app-cowoo-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size-lg=\"6\" offset-lg=\"3\" size=\"12\">\n        <ion-card-header *ngIf=\"!coworker\">\n          <ion-card-title>Coworker not found</ion-card-title>\n        </ion-card-header>\n        <div class=\"flex-row\">\n          <ion-avatar class=\"flex-item-center\"><img [src]=\"avatarImg\"></ion-avatar>\n          <h2 class=\"flex-item-center\">{{fullName}}</h2>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n<ion-content>\n<ion-tabs *ngIf=\"coworker\">\n    <ion-tab-bar slot=\"bottom\">\n      <ion-tab-button tab=\"current\">\n        <ion-icon name=\"business\"></ion-icon>\n        <ion-label>Current Assignment</ion-label>\n      </ion-tab-button>\n      <ion-tab-button tab=\"former\">\n        <ion-icon name=\"file-tray-stacked\"></ion-icon>\n        <ion-label>Former Assignments</ion-label>\n      </ion-tab-button>\n      <ion-tab-button tab=\"contact\">\n        <ion-icon name=\"call\"></ion-icon>\n        <ion-label>Contact Details</ion-label>\n      </ion-tab-button>\n    </ion-tab-bar>\n</ion-tabs>\n</ion-content>\n"
        },
        {
            "name": "CoworkersPage",
            "id": "component-CoworkersPage-9bfff9dee97294d0009b07a0929a93ca",
            "file": "src/app/coworkers/coworkers.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coworkers",
            "styleUrls": [
                "./coworkers.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coworkers.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coworkers$",
                    "type": "Observable<Coworker[]>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FacadeService } from '../core/services/facade.service';\nimport { Coworker } from './coworker';\nimport {AvatarService} from '../core/services/avatar.service';\n\n@Component({\n  selector: 'app-coworkers',\n  templateUrl: './coworkers.page.html',\n  styleUrls: ['./coworkers.page.scss'],\n})\nexport class CoworkersPage implements OnInit {\n  coworkers$: Observable<Coworker[]>;\n\n  constructor(\n      private facadeService: FacadeService) { }\n\n  ngOnInit() {\n    this.coworkers$ = this.facadeService.getCoWorkers();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coworkers.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "facadeService",
                        "type": "FacadeService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "facadeService",
                        "type": "FacadeService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-cowoo-header></app-cowoo-header>\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col offset-sm=\"2\" offset-lg=\"3\" size-sm=\"8\" size-lg=\"6\">\n      <ion-list role=\"list\">\n        <app-coworker-item\n                *ngFor=\"let coworker of coworkers$ | async\"\n                [coworker]=\"coworker\"\n        ></app-coworker-item>\n      </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n"
        },
        {
            "name": "CurrentPositionComponent",
            "id": "component-CurrentPositionComponent-7ce91cfd5e5d50629694aee918a9085e",
            "file": "src/app/coworkers/coworkers-detail/current-position/current-position.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-current-position",
            "styleUrls": [
                "./current-position.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./current-position.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-current-position',\n  templateUrl: './current-position.component.html',\n  styleUrls: ['./current-position.component.scss'],\n})\nexport class CurrentPositionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./current-position.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-cowoo-header [title]=\"'coworker'\"></app-cowoo-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size-lg=\"6\" offset-lg=\"3\" size=\"12\">\n        <ion-card-header *ngIf=\"!coworker\">\n          <ion-card-title>Coworker not found</ion-card-title>\n        </ion-card-header>\n        <div class=\"flex-row\">\n          <ion-avatar class=\"flex-item-center\"><img [src]=\"avatarImg\"></ion-avatar>\n          <h2 class=\"flex-item-center\">{{fullName}}</h2>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n<ion-content>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoworkersDetailPageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoworkersDetailPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoworkersDetailPageRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoworkersDetailPageRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoworkersPageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoworkerItemComponent"
                        },
                        {
                            "name": "CoworkersPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoworkersPageRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoworkersPageRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CowooHeaderComponent"
                        },
                        {
                            "name": "DefaultValuePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CowooHeaderComponent"
                        },
                        {
                            "name": "DefaultValuePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "global",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/jest-config/setup.ts",
                "type": ""
            },
            {
                "name": "mock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/jest-config/globalMocks.ts",
                "type": "",
                "defaultValue": "() => {\n  let storage = {};\n  return {\n    getItem: key => (key in storage ? storage[key] : null),\n    setItem: (key, value) => (storage[key] = value || ''),\n    removeItem: key => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "AssignmentStatus",
                "childs": [
                    {
                        "name": "AVAILABLE"
                    },
                    {
                        "name": "ASSIGNMENT"
                    },
                    {
                        "name": "LOOKOUT"
                    },
                    {
                        "name": "LEAVING_FIRM"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/coworkers/coworker.ts"
            }
        ],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/jest-config/setup.ts": [
                {
                    "name": "global",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/jest-config/setup.ts",
                    "type": ""
                }
            ],
            "src/jest-config/globalMocks.ts": [
                {
                    "name": "mock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/jest-config/globalMocks.ts",
                    "type": "",
                    "defaultValue": "() => {\n  let storage = {};\n  return {\n    getItem: key => (key in storage ? storage[key] : null),\n    setItem: (key, value) => (storage[key] = value || ''),\n    removeItem: key => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/coworkers/coworker.ts": [
                {
                    "name": "AssignmentStatus",
                    "childs": [
                        {
                            "name": "AVAILABLE"
                        },
                        {
                            "name": "ASSIGNMENT"
                        },
                        {
                            "name": "LOOKOUT"
                        },
                        {
                            "name": "LEAVING_FIRM"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/coworkers/coworker.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "coworkers",
                        "pathMatch": "full"
                    },
                    {
                        "path": "coworkers",
                        "loadChildren": "./coworkers/coworkers.module#CoworkersPageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/coworkers/coworkers-routing.module.ts",
                                        "module": "CoworkersPageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CoworkersPage"
                                            },
                                            {
                                                "path": ":coworkerId/current",
                                                "redirectTo": ":coworkerId",
                                                "pathMatch": "full"
                                            },
                                            {
                                                "path": ":coworkerId",
                                                "loadChildren": "./coworkers-detail/coworkers-detail.module#CoworkersDetailPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/coworkers/coworkers-detail/coworkers-detail-routing.module.ts",
                                                                "module": "CoworkersDetailPageRoutingModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "CoworkersDetailPage"
                                                                    },
                                                                    {
                                                                        "path": "current",
                                                                        "component": "CurrentPositionComponent"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "CoworkersDetailPageModule"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CoworkersPageModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/ensure-imported-once.module.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EnsureImportedOnceModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/avatar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AvatarService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/facade.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FacadeService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/http.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/coworkers/coworker-item/coworker-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoworkerItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/coworkers/coworker.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coworker",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/coworkers/coworkers-detail/coworkers-detail.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoworkersDetailPage",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/coworkers/coworkers-detail/current-position/current-position.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CurrentPositionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/coworkers/coworkers.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoworkersPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cowoo-header/cowoo-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CowooHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/default-value.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DefaultValuePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/jest-config/globalMocks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/jest-config/setup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "global",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}